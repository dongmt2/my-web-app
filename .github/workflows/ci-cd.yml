name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.settag.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        id: build
        run: docker build -t my-web-app:latest .
      
      - name: Set image tag output
        id: settag
        run: echo "image_tag=latest" >> $GITHUB_OUTPUT

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      vulnerabilities_found: ${{ steps.scan.outputs.vulnerabilities_found }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          # Cách 1: Dùng URL phiên bản cố định
          wget https://github.com/aquasecurity/trivy/releases/download/v0.60.0/trivy_0.60.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.60.0_Linux-64bit.deb

    # Cách 2 (khuyến nghị): Dùng script cài đặt
    # curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin


      - name: Scan Docker image for vulnerabilities
        id: scan
        # Cho phép job tiếp tục dù có lỗi (để capture output)
        continue-on-error: true
        run: |
          set +e
          trivy image --exit-code 1 --severity HIGH,CRITICAL my-web-app:latest
          ret=$?
          # Nếu ret=0 => không có lỗ hổng, ngược lại có lỗ hổng
          echo "vulnerabilities_found=${ret}" >> $GITHUB_OUTPUT
          exit $ret

  deploy:
    runs-on: ubuntu-latest
    needs: security-scan
    if: needs.security-scan.outputs.vulnerabilities_found == '0'
    steps:
      - name: Deploy container
        run: |
          docker run -d --name my-web-app-container --restart unless-stopped -p 8080:80 my-web-app:latest

  rollback_or_isolate:
    runs-on: ubuntu-latest
    needs: security-scan
    if: needs.security-scan.outputs.vulnerabilities_found != '0'
    steps:
      - name: Rollback / Isolate Container
        run: |
          echo "Có lỗ hổng bảo mật được phát hiện. Thực hiện rollback hoặc cách ly container."
          # Ví dụ: Dừng container hiện tại (nếu có) và triển khai phiên bản ổn định trước đó
          docker stop my-web-app-container || true
          docker rm my-web-app-container || true
          # Giả sử phiên bản ổn định đã biết là v1.0, bạn có thể sử dụng image này để triển khai
          docker run -d --name my-web-app-container --restart unless-stopped -p 8080:80 my-web-app:v1.0
